TDD cycle: 
1. Write a test. Run it to see if it fails.
2. Add a small amount of code to make it run. Run all tests to verify it passes. 
4. Refactor (simplify, make interfaces, de-couple classes) and run tests again to verify.  

Why TDD? 
1. Make sure you're clear on what your goal actually is. 
2. Don't write useless code. 
3. Write code in small enough chunks that you can verify that it's correct, and debugging is easy.
4. Maintain your focus by writing small things so you don't get distracted, lost, or confused or write useless code;
and by creating easy times to take breaks and check-in on your goals - in between cycles. 
5. Keep your code correct at all times or know immediately that it doesn't work and what broke, by
having tests for all your code that are easy to run, and running them frequently - every cycle. 
6. Keep your code clean by refactoring frequently - every cycle. 

TODO: 	

1. Refactoring, esp. the UI
	why are things so ugly?
	decouple, simplify, clarify
	make factories
	
2. UI - more than 20 items in an order - 
	prices, amounts, quantities that are doubles rather than ints - 
	some glitches with saving orders when you don't put in all the info... 
	ship date vs pack/pick date in item, order, display, csv
	price not saving to csv/item
	another problem with the display of info from the csv - not in the right columns... 

2. Printing: rotate label - 
	size label correctly - 
	verify GTINs correct and scannable - 
	VP code readable - 
	
4. Change server to actual computer - 
		
TESTS:
- print with 1 label
- print with multiple labels
- bar codes scannable
		https://www.producetraceability.org/resources/ has a GTIN checker and VPC checker


LATER:
orders from multiple days- put all on one screen but in order? or diff screens to click thru? 
edit existing orders
autopopulation eg of company, item
error checking of input info
print from Mac
save orders in 1 big csv, all orders ever entered? vs writing over them each time - keep with a fixed order num
change settings within app, eg label size
possibly I should include a lot # and/or pack date in the bar code
make hrv align with bar segments
error check people invalid input - customers, products, invalid dates, gtins
ck lot code with Jessie - I did YYMMDD. can change to whatever. 
get own CRC code working
what do if company name is really long? do they only put in abbreviations? right now I have up to 24 characters, size-wise
User Interface bugs - ahh, UI testing is a pain
labelTests - how can I test this without myself visually checking? Just the existence of the label? or research UI tests? 
make my own HBox and VBox - inherit from JPanel or whatever - so I don't have to keep creating and setting the layout
print labels without needing an order? 
make UI prettier/cleaner, remove all bugs - 
search for all todos - 
add warning popup before deleting order - 
Import to quickbooks - 
	select which orders to import - 
	IIF file - 
	how get invoice number? user enters? or auto on import? or?  
better - non glitchy - implementation of scrollbar
clear printlns
deal with fractional items

DONE:
Using a nice IDE - DONE
Backup to GitHub - DONE
Read from an Excel file - DONE
Make a label graphic - DONE
	Graphics library - DONE
		Trying Java 2D: https://docs.oracle.com/javase/tutorial/2d/ - Nice!
		See also: example: https://docs.oracle.com/javase/tutorial/2d/basic2d/examples/WeatherWizard.java
				Javadocs for graphics2D library 
	Bar code - DONE
		lines - DONE
		human readable version - DONE
	Customer - DONE
	Product - DONE
	Generic label info - DONE
	Pack date - DONE
	Voice pick code - DONE
Select orders to print and print  - 
	items have checkboxes, checking them selects/deselects all those - DONE
	companies have checkboxes, checking them selects/deselects - DONE
	each individual item in an order has a checkbox - DONE
	print button exists - DONE
	when print label button clicked, labels whose checkboxes are checked will view as labels - DONE
	add Print button to label view, print dialog when clicked - DONE
		Calculate - DONE
		ck against examples - DONE
		formatting - DONE
	Rectangles - DONE
Print label graphic - DONE
	Make all lay out nicely, font sizes right, and change magic numbers to constants/variables - DONE
	to paper - YEAH! DONE
	dimensions, e.g. of bar code - DONE
	test whether printAll prints 1 page - sweet it does! DONE 
	make background white so doesn't use ink to print - DONE
	label is 4" wide by 3.5" tall
	see: https://answers.microsoft.com/en-us/windows/forum/windows_10-hardware-winpc/microsoft-print-to-pdf-custom-paper-sizes-possible/90ed3d48-1ece-4ca5-8d3b-ff0af24a7b37
	make larger - DONE
	make save on other 180 deg - DONE
De-couple classes, make interfaces, and write tests for everything - 
	Date - DONE
	CRC16 generator - DONE
	Bar code generator - DONE
	Voice pick code generator - DONE
Understand and write classes for:
	display the label to the screen - DONE
		start over with the label graphics - can be so much cleaner - DONE
	build a label -> specifically the RDFlabel - DONE
		make Tim's edits - DONE
		scannable - DONE
	make viewing labels scrollable - DONE
	Add label for each qty - DONE
Order-entry form/UI - 
	what info do we put on an invoice/Christina's page - DONE
		company - DONE
		PO num - DONE
		shipVia - DONE
		list of itemCode, qty, price - DONE
	autopopulation of amounts - DONE
	save to order display - DONE
	save to csv - DONE!
	clear order entry after save - DONE
	Initialize program from saved order csv - 	DONE
	table of companies/orders and items - DONE
UI - 
	make pretty - 
		Make all company names, item names, and item qtys the same size - DONE
		space all near the top instead of taking up the whole space of the Jpanel - DONE
		order entry:
			left align top stuff - DONE
			right align total stuff - DONE
			Make textfields have minimum sizes - DONE
			make textfields and their headers have the same minimum size - DONE
	row alignment - DONE
Delete orders - DONE
Printing - 
	how can you talk to a printer? the printer driver does it. So if your computer can talk to it, 
			and you can open a print dialog with that printer, you should be good - DONE
	change margins - DONE
	try printing on label printer - DONE!
Run on computer as application - DONE! 
	how use resource files like images, csv with a jar? - I put it in a folder by the jar - DONE
	run on Mac as application - DONE, except for print problem
Info from spreadsheets/datebase (ie, what shows up on a QB invoice) - 
		GTINS! - DONE
		description - DONE
		name (stored in item-> show on order display) - DONE
		unit, not sure this is real or not - DONE
Run on multiple computers at once - 
	update button - DONE
	server running with csv file - DONE
	send back csv - epic! DONE
	pull request to server - DONE!
	read csv into display - (whew that was easy then frustrating) DONE
	push to server on saved order - DONE
	server saves new csv - DONE!
	auto-update on startup - DONE
Create actual spreadsheet with code, descrip, GTIN, name, unit - DONE
	
		